<?php
require_once 'bootstrap.php';
require_once 'BaseModuleTest.php';

class FuelModelSingleModeWesternAspenTest extends BaseModuleTest
{
    protected function setUp(){ parent::setUp(); }
    protected function tearDown() { parent::tearDown(); }
    public function __construct() { }
    /**
     *
     */
    public function testFuelModelWesternAspenMode()
    {
        $name = 'WFBC';
        $simulator = new \Sem\Experimental\Simulator( $name );
        $dic = $simulator->getDictionary();
        $cfg = $simulator->getConfiguration();
        $cfg->setValue( 'FuelModelModule/Mode', 'western-aspen' );
        $cfg = $simulator->getConfiguration();
        $cfg->setValue( 'FuelBedModule/Mode', 'enabled' );
        //$cfg->setValue( 'FireBedModule/Mode', 'enabled' );

        $dag = $simulator->createDag();
        $dag->resolveInputItems();
        $inputItems = $dag->getInputItems();
        $this->assertEquals( 2, count( $inputItems ), __LINE__ );

        $model = 'FuelModel/';
        $curing = 0.3;
        $dag->setValue( $model.'Code', 'ash' );
        $dag->setValue( $model.'WesternAspen/CuringLevel', $curing );
        $dag->update();

        $this->assertEquals( 'ash', $dag->getValue( $model.'Code' ), __LINE__ );
        $this->assertEquals( '', $dag->getValue( $model.'ParametersString' ), __LINE__ );
        $this->assertEquals( 'western-aspen', $dag->getValue( $model.'Type' ), __LINE__ );
        $this->assertEquals( 26, count( $dag->getValue( $model.'ParticleCollection' ) ), __LINE__ );
        $this->assertEquals( 0.25, $dag->getValue( $model.'DeadCategory/MoistureContentOfExtinction' ), __LINE__ );
        $this->assertEquals( 0.65, $dag->getValue( $model.'FuelDepth' ), __LINE__ );
        $this->assertEquals( $curing, $dag->getValue( $model.'WesternAspen/CuringLevel' ), __LINE__ );
        $this->assertEquals( 0.893, $dag->getValue( $model.'ParticleCollection' )['WesternAspen/Dead1Hour']['OvendryFuelLoad'], __LINE__ );
    }

    /**
     *
     */
    public function testFuelModelParameterizedKeysWesternAspenFuelModels()
    {
        $name = 'WFBC';
        $simulator = new \Sem\Experimental\Simulator( $name );
        $dic = $simulator->getDictionary();
        $cfg = $simulator->getConfiguration();
        $cfg->setValue( 'FuelModelModule/Mode', 'single' );
        $cfg->setValue( 'FuelBedModule/Mode', 'enabled' );
        //$cfg->setValue( 'FireBedModule/Mode', 'enabled' );

        $prefix = 'FuelModel/';
        $parameterizedKeyItem = $prefix.'ParameterizedKey';
        $codeItem = $prefix.'Code';
        $parametersStringItem = $prefix.'ParametersString';
        $parametersArrayItem = $prefix.'ParametersArray';
        $typeItem = $prefix.'Type';

        $this->assertTrue( $dic->hasItem( $parameterizedKeyItem ), __LINE__ );
        $this->assertTrue( $dic->hasItem( $codeItem ), __LINE__ );
        $this->assertTrue( $dic->hasItem( $parametersStringItem ), __LINE__ );
        $this->assertTrue( $dic->hasItem( $parametersArrayItem ), __LINE__ );
        $this->assertTrue( $dic->hasItem( $typeItem ), __LINE__ );

        $dag = $simulator->createDag();
        $dag->resolveInputItems();
        $inputItems = $dag->getInputItems();
        $missingItems = $dag->getMissingInputItems();
        $this->assertEquals( 0, count( $missingItems ), __LINE__ );
        $availableOutputItems = $dag->getAvailableOutputItems();

        // Test all 5 western aspen fuel types:
        $dag->setValue( $parameterizedKeyItem, 'ash/c=30' );
        $dag->update();
        $this->assertEquals( 'ash', $dag->getValue( $codeItem ), __LINE__ );
        $this->assertEquals( 'c=30', $dag->getValue( $parametersStringItem ), __LINE__ );
        $this->assertEquals( 'western-aspen', $dag->getValue( $typeItem ), __LINE__ );
        $this->assertEquals( 26, count( $dag->getValue( $prefix.'ParticleCollection' ) ), __LINE__ );
        $this->assertEquals( 0.25, $dag->getValue( $prefix.'DeadCategory/MoistureContentOfExtinction' ), __LINE__ );
        $this->assertEquals( 0.65, $dag->getValue( $prefix.'FuelDepth' ), __LINE__ );
        $this->assertEquals( 0.30, $dag->getValue( $prefix.'WesternAspen/CuringLevel' ), __LINE__ );
        $this->assertEquals( 0.893, $dag->getValue( $prefix.'ParticleCollection' )['WesternAspen/Dead1Hour']['OvendryFuelLoad'], __LINE__ );
        $this->assertEquals( 0.893, $dag->getValue( $prefix.'Particle/WesternAspen/Dead1Hour/OvendryFuelLoad' ), __LINE__ );

        $dag->setValue( $parameterizedKeyItem, 'atf/C=50' );
        $dag->update();
        $this->assertEquals( 'atf', $dag->getValue( $codeItem ), __LINE__ );
        $this->assertEquals( 'C=50', $dag->getValue( $parametersStringItem ), __LINE__ );
        $this->assertEquals( 'western-aspen', $dag->getValue( $typeItem ), __LINE__ );
        $this->assertEquals( 26, count( $dag->getValue( $prefix.'ParticleCollection' ) ), __LINE__ );
        $this->assertEquals( 0.25, $dag->getValue( $prefix.'DeadCategory/MoistureContentOfExtinction' ), __LINE__ );
        $this->assertEquals( 0.30, $dag->getValue( $prefix.'FuelDepth' ), __LINE__ );
        $this->assertEquals( 0.50, $dag->getValue( $prefix.'WesternAspen/CuringLevel' ), __LINE__ );
        $this->assertEquals( 1.056, $dag->getValue( $prefix.'ParticleCollection' )['WesternAspen/Dead1Hour']['OvendryFuelLoad'], __LINE__ );
        $this->assertEquals( 1.056, $dag->getValue( $prefix.'Particle/WesternAspen/Dead1Hour/OvendryFuelLoad' ), __LINE__ );

        $dag->setValue( $parameterizedKeyItem, 'alf/C=.70' );
        $dag->update();
        $this->assertEquals( 'alf', $dag->getValue( $codeItem ), __LINE__ );
        $this->assertEquals( 'C=.70', $dag->getValue( $parametersStringItem ), __LINE__ );
        $this->assertEquals( 'western-aspen', $dag->getValue( $typeItem ), __LINE__ );
        $this->assertEquals( 26, count( $dag->getValue( $prefix.'ParticleCollection' ) ), __LINE__ );
        $this->assertEquals( 0.25, $dag->getValue( $prefix.'DeadCategory/MoistureContentOfExtinction' ), __LINE__ );
        $this->assertEquals( 0.18, $dag->getValue( $prefix.'FuelDepth' ), __LINE__ );
        $this->assertEquals( 0.70, $dag->getValue( $prefix.'WesternAspen/CuringLevel' ), __LINE__ );
        $this->assertEquals( 0.699, $dag->getValue( $prefix.'ParticleCollection' )['WesternAspen/Dead1Hour']['OvendryFuelLoad'], __LINE__ );
        $this->assertEquals( 0.699, $dag->getValue( $prefix.'Particle/WesternAspen/Dead1Hour/OvendryFuelLoad' ), __LINE__ );

        $dag->setValue( $parameterizedKeyItem, 'ams/c=0.90' );
        $dag->update();
        $this->assertEquals( 'ams', $dag->getValue( $codeItem ), __LINE__ );
        $this->assertEquals( 'c=0.90', $dag->getValue( $parametersStringItem ), __LINE__ );
        $this->assertEquals( 'western-aspen', $dag->getValue( $typeItem ), __LINE__ );
        $this->assertEquals( 26, count( $dag->getValue( $prefix.'ParticleCollection' ) ), __LINE__ );
        $this->assertEquals( 0.25, $dag->getValue( $prefix.'DeadCategory/MoistureContentOfExtinction' ), __LINE__ );
        $this->assertEquals( 0.50, $dag->getValue( $prefix.'FuelDepth' ), __LINE__ );
        $this->assertEquals( 0.90, $dag->getValue( $prefix.'WesternAspen/CuringLevel' ), __LINE__ );
        $this->assertEquals( 1.30, $dag->getValue( $prefix.'ParticleCollection' )['WesternAspen/Dead1Hour']['OvendryFuelLoad'], __LINE__ );
        $this->assertEquals( 1.30, $dag->getValue( $prefix.'Particle/WesternAspen/Dead1Hour/OvendryFuelLoad' ), __LINE__ );

        $dag->setValue( $parameterizedKeyItem, 'amf/C=80' );
        $dag->update();
        $this->assertEquals( 'amf', $dag->getValue( $codeItem ), __LINE__ );
        $this->assertEquals( 'C=80', $dag->getValue( $parametersStringItem ), __LINE__ );
        $this->assertEquals( 'western-aspen', $dag->getValue( $typeItem ), __LINE__ );
        $this->assertEquals( 26, count( $dag->getValue( $prefix.'ParticleCollection' ) ), __LINE__ );
        $this->assertEquals( 0.25, $dag->getValue( $prefix.'DeadCategory/MoistureContentOfExtinction' ), __LINE__ );
        $this->assertEquals( 0.18, $dag->getValue( $prefix.'FuelDepth' ), __LINE__ );
        $this->assertEquals( 0.80, $dag->getValue( $prefix.'WesternAspen/CuringLevel' ), __LINE__ );
        $this->assertEquals( 1.0255, $dag->getValue( $prefix.'ParticleCollection' )['WesternAspen/Dead1Hour']['OvendryFuelLoad'], __LINE__ );
        $this->assertEquals( 1.0255, $dag->getValue( $prefix.'Particle/WesternAspen/Dead1Hour/OvendryFuelLoad' ), __LINE__ );
    }
}